# Use the official Elixir image
FROM debian:bullseye-slim as compiler
ARG MIX_ENV=prod
ARG APP_DIR=/app
ARG APP_NAME=hiveforge_controller
ARG ELIXIR_VERSION=v1.17.0
ARG ERLANG_VERSION=27.0
ARG ENABLE_JIT=false
ARG TARGETPLATFORM

# Install required dependencies and Erlang
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gnupg2 \
    wget \
    git \
    make \
    openssl \
    build-essential \
    libncurses5-dev \
    libssl-dev \
    libwxgtk3.0-gtk3-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libpng-dev \
    libssh-dev \
    unixodbc-dev \
    xsltproc \
    fop \
    libxml2-utils \
    locales \
    autoconf \
    m4 \
    libncurses5 \
    libstdc++6

# Set locale to UTF-8
RUN echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && \
    locale-gen en_US.UTF-8 && \
    update-locale LANG=en_US.UTF-8

ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

WORKDIR /tmp

# Install Erlang from source with JIT configuration
RUN mkdir erlang && \
    git clone --branch OTP-${ERLANG_VERSION} --depth 1 --single-branch https://github.com/erlang/otp.git erlang && \
    cd erlang && \
    ./configure $(if [ "$ENABLE_JIT" = "false" ]; then echo "--disable-jit"; fi) && \
    make && \
    make install

WORKDIR /tmp

# Install Elixir from source
RUN git clone --branch ${ELIXIR_VERSION} --depth 1 --single-branch https://github.com/elixir-lang/elixir.git && \
    cd elixir && \
    make clean compile && \
    mkdir -p /usr/local/elixir && \
    cp -r * /usr/local/elixir

# cleanup
WORKDIR /
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Add Elixir's bin to PATH
ENV PATH=/usr/local/elixir/bin:$PATH
