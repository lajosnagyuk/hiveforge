apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
        - name: postgres-ca-cert
          configMap:
            name: postgres-ca-cert
      containers:
        - name: {{ .Chart.Name }}
          volumeMounts:
            - name: postgres-ca-cert
              mountPath: /etc/ssl/postgres
              readOnly: true
          image: "{{.Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.tunables.network.targetPort }}
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            - name: POSTGRES_CACERTFILE
              value: /etc/ssl/postgres/ca.crt
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.tunables.database.secretName }}"
                  key: postgres-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.tunables.database.secretName }}"
                  key: postgres-password
            - name: DB_NAME
              value: "{{ .Values.tunables.database.name }}"
            - name: DB_HOST
              value: "{{ .Values.tunables.database.clusterName }}-pooler.{{ .Values.tunables.database.namespace }}.svc.cluster.local"
            - name: DB_PORT
              value: "{{ .Values.tunables.network.pgbouncerPort }}"
