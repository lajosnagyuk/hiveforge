apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{.Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.tunables.network.targetPort }}
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.tunables.database.secretName }}"
                  key: postgres-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.tunables.database.secretName }}"
                  key: postgres-password
            - name: DB_NAME
              value: "{{ .Values.tunables.database.name }}"
            - name: DB_HOST
              value: "{{ .Values.tunables.database.clusterName }}.{{ .Values.tunables.database.namespace }}.svc.cluster.local"
            - name: DB_PORT
              value: "{{ .Values.tunables.network.pgPort }}"
            - name: S3_BACKEND
              value: "{{ .Values.tunables.storage.backend }}"
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.tunables.storage.secretName }}"
                  key: s3-access-key-id
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.tunables.storage.secretName }}"
                  key: s3-secret-access-key
            - name: S3_BUCKET_NAME
              value: "{{ .Values.tunables.storage.bucketName }}"
            {{- if eq .Values.tunables.storage.backend "minio" }}
            - name: S3_ENDPOINT
              value: "{{ .Values.tunables.storage.endpoint }}"
            {{- end }}
            {{- if eq .Values.tunables.storage.backend "backblaze" }}
            - name: S3_REGION
              value: "{{ .Values.tunables.storage.region }}"
            {{- end }}
            - name: HIVEFORGE_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: hiveforge-controller-master-key
                  key: master-key
            - name: HIVEFORGE_JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: hiveforge-controller-jwt-secret
                  key: jwt-key
